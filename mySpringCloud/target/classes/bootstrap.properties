# DataId By default, the `spring.application.name` configuration is combined with the file extension (the configuration format uses properties by default),
# and the GROUP is not configured to use DEFAULT_GROUP by default.
# Therefore, the Nacos Config configuration corresponding to the configuration file has a DataId of nacos-config.properties and a GROUP of DEFAULT_GROUP
spring.application.name=nacos-config
spring.cloud.nacos.config.server-addr=106.55.60.108:8848

#1. 配置中心yaml/yml后缀配置文件(不配默认是properties，spring拼接dataid时用.properties结尾)
#只需要在本地bootstrap文件添加yaml后缀：
#spring.cloud.nacos.config.file-extension=yaml(默认是properties)
#2. 动态读取配置中心数据，就是死循环读environment里面的属性值
spring.cloud.nacos.config.file-extension=yaml

#关闭自动刷新：(默认是true)
#通过environment对象去拿，将拿不到最新修改的值
#spring.cloud.nacos.config.refresh-enabled=false

#指定环境(dev/uat/pro)环境配置文件
#spring.profile.active=dev
#注意：DataId:${spring.application.name}-${profile}.${file-extension:properties}
#实际应用场景，配置文件的环境指定，使用jvm启动参数
#-Dspring.profiles.active=<profile> 启动时进行指定
# In real scenarios, this variable needs to be different in different environment.
# You can use the -Dspring.profiles.active=<profile> parameter to specify the configuration so that you can switch between different environments easily.
spring.profiles.active=dev

#配置文件绑定命名空间：
#spring.cloud.nacos.config.namespace=9fd1ed1e-09e1-4f20-bbff-bd7b7a9b3b20
#注意：这个配置必须在bootstrap文件中定义，并且该id必须是nacos提前配置并存在的，否则会报错
# This configuration must be in the bootstrap.properties file. The value of is the id of the namespace, and the value of id can be retrieved from the Nacos console.
spring.cloud.nacos.config.namespace=9fd1ed1e-09e1-4f20-bbff-bd7b7a9b3b20

#因此 对于不同环境的配置文件有两种实现方式：
#1. 同命名空间的不同配置文件，同一个namespace(默认public)下，通过-Dspring.profiles.active=dev 配置环境，对应到不同的环境配置文件
#2. 用不同命名空间代表环境(推荐)，(不用spring.profiles.active配置)，-Dspring.cloud.nacos.config.namespace=9fd1ed1e-09e1-4f20-bbff-bd7b7a9b3b20直接对应不同的环境即可


#不同组可以有相同名字的配置文件
#spring.cloud.nacos.config.group=DEVELOP_GROUP
#自定义组，这个配置必须在bootstrap文件定义，并且必须是nacos里面已经提前定义好的，不然会报错，不指定默认是DEFAULT_GROUP
# This configuration must be in the bootstrap.properties file, and the value of Group must be the same with the value of spring.cloud.nacos.config.group.
spring.cloud.nacos.config.group=DEVELOP_GROUP

# 多配置文件①，注意：ext文件与主配置文件必须在同一个命名空间下namespace：${spring.cloud.nacos.config.namespace:public}
# 必须加后缀
#The value of spring.cloud.nacos.config.ext-config[n].data-id must have a file extension, and it could be properties or yaml/yml.
#The setting in spring.cloud.nacos.config.file-extension does not have any impact on the custom Data Id file extension.
spring.cloud.nacos.config.extension-configs[0].data-id=common.properties
spring.cloud.nacos.config.extension-configs[0].group=DEFAULT_GROUP
spring.cloud.nacos.config.extension-configs[0].refresh=true

# 多配置文件②，另外写法
spring.cloud.nacos.config.shared-configs=common1.properties,common2.properties
spring.cloud.nacos.config.shared-configs[0].refresh=true
spring.cloud.nacos.config.shared-configs[0].group=DEFAULT_GROUP
spring.cloud.nacos.config.shared-configs[1].refresh=true
spring.cloud.nacos.config.shared-configs[2].refresh=true

###
###        DataId : ${spring.application.name}-${profile}. ${file-extension:properties}
###